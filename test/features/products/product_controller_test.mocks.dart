// Mocks generated by Mockito 5.4.6 from annotations
// in zello/test/features/products/product_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:zello/src/features/products/domain/product_model.dart' as _i2;
import 'package:zello/src/features/products/domain/product_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ProductService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductService extends _i1.Mock implements _i3.ProductService {
  MockProductService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ProductModel>> findAll() =>
      (super.noSuchMethod(
            Invocation.method(#findAll, []),
            returnValue: _i4.Future<List<_i2.ProductModel>>.value(
              <_i2.ProductModel>[],
            ),
          )
          as _i4.Future<List<_i2.ProductModel>>);

  @override
  _i4.Future<_i2.ProductModel> findById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#findById, [id]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(this, Invocation.method(#findById, [id])),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<_i2.ProductModel> create({
    required String? name,
    required String? description,
    required double? weight,
    required String? weightUnit,
    required double? price,
    required DateTime? createdAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #name: name,
              #description: description,
              #weight: weight,
              #weightUnit: weightUnit,
              #price: price,
              #createdAt: createdAt,
            }),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#create, [], {
                  #name: name,
                  #description: description,
                  #weight: weight,
                  #weightUnit: weightUnit,
                  #price: price,
                  #createdAt: createdAt,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<_i2.ProductModel> update({
    required int? id,
    required String? name,
    required String? description,
    required double? weight,
    required String? weightUnit,
    required double? price,
    required DateTime? createdAt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#update, [], {
              #id: id,
              #name: name,
              #description: description,
              #weight: weight,
              #weightUnit: weightUnit,
              #price: price,
              #createdAt: createdAt,
            }),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#update, [], {
                  #id: id,
                  #name: name,
                  #description: description,
                  #weight: weight,
                  #weightUnit: weightUnit,
                  #price: price,
                  #createdAt: createdAt,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<void> delete(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
